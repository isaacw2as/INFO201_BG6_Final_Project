source("~/Documents/INFO201/project/data_wrangling.R")
sleep_data_combined <- merge(sleep_health_lifestyle, sleep_pattern_data, all=TRUE)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
sleep_data_combined$Sleep.Duration
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
print(colnames(sleep_health_lifestyle))
print(colnames(stress_levels_data))
View(fitbit_data)
source("~/Documents/INFO201/project/data_wrangling.R")
print(colnames(stress_levels_data))
print(colnames(mental_health_data))
sleep_pattern_data <- read.csv("/Users/isaacyun/Documents/INFO201/project/actual data/sleep_pattern.csv")
sleep_health_lifestyle <- read.csv("/Users/isaacyun/Documents/INFO201/project/actual data/sleep_health_lifestyle.csv")
source("~/Documents/INFO201/project/data_wrangling.R")
View(stress_levels_data)
View(stress_levels_data)
source("~/Documents/INFO201/project/data_wrangling.R")
mental_health_data <- mental_health_data %>%
rename(
Academic_Performace = CGPA
)
mental_health_data$Academic_Performace <- calculate_performance(mental_health_data$Academic_Performace)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
mental_health_data$Academic_Performace[1]
calculate_performance(mental_health_data$Academic_Performace[1])
mental_health_data$Academic_Performace <- lapply(mental_health_data$Academic_Performace, calculate_performance)
mental_health_data$Academic_Performace
na.omit(mental_health_data)
mental_health_data <- na.omit(mental_health_data)
mental_health_data <- mental_health_data[complete.cases(mental_health_data), ]
source("~/Documents/INFO201/project/data_wrangling.R")
mental_health_data <- read.csv("/Users/isaacyun/Documents/INFO201/project/actual data/students_mental_health_survey.csv")
stress_levels_data <- stress_levels_data[complete.cases(stress_levels_data), ]
source("~/Documents/INFO201/project/data_wrangling.R")
lol <- lapply(mental_health_data$Academic_Performace, calculate_performance)
lol <- lapply(as.list(mental_health_data$Academic_Performace), calculate_performance)
lol <- as.list(lapply(mental_health_data$Academic_Performace, calculate_performance))
lapply(mental_health_data$Academic_Performace, calculate_performance)
hi <- lapply(mental_health_data$Academic_Performace, calculate_performance)
lit <- mental_health_data$Academic_Performace
lit <- mental_health_data[Academic_Performace]
source("~/Documents/INFO201/project/data_wrangling.R")
gpas <- (list(mental_health_data$Academic_Performace)
source("~/Documents/INFO201/project/data_wrangling.R")
gpas <- list(mental_health_data$Academic_Performace)
gpas <- list(mental_health_data$Academic_Performace)[1]
gpas <- list(mental_health_data$Academic_Performace)$
mental_health_data$Academic_Performace <- lapply(list(mental_health_data$Academic_Performace), calculate_performance)
gpas <- list(mental_health_data$Academic_Performace)$
mental_health_data$Academic_Performace <- lapply(list(mental_health_data$Academic_Performace), calculate_performance)
gpas <- list(mental_health_data$Academic_Performace)$$
gpas
gpas[1]
gpas[1][1]
hi <- gpas[1]
mental_health_data$Academic_Performace <- lapply(list(mental_health_data$Academic_Performace)[1], calculate_performance)
mental_health_data$Academic_Performace <- lapply(list(mental_health_data$Academic_Performace)[1][1], calculate_performance)
mental_health_data$Academic_Performace <- apply(list(mental_health_data$Academic_Performace), 1, calculate_performance)
mental_health_data$Academic_Performace <- calculate_performance(gpas)
mental_health_data$Academic_Performace <- calculate_performance(mental_health_data$Academic_Performace)
source("~/Documents/INFO201/project/data_wrangling.R")
View(mental_health_data)
View(mental_health_data)
unique(mental_health_data$Academic_Performace)
mental_health_data <- read.csv("/Users/isaacyun/Documents/INFO201/project/actual data/students_mental_health_survey.csv")
calculate_performance <- function(gpas) {
performances <- list()
for (x in 1:length(gpas)) {
gpa = gpas[x]
if (gpa > 3.7){
performances <- c(performances, 5)
}else if (gpa > 3.3){
performances <- c(performances, 4)
}else if (gpa > 2.8){
performances <- c(performances, 3)
}else if (gpa > 2.0){
performances <- c(performances, 2)
}else{
performances <- c(performances, 1)
}
return(performances)
}
}
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
unique(mental_health_data$Academic_Performace)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
unique(mental_health_data$Academic_Performace)
View(stress_levels_data)
source("~/Documents/INFO201/project/data_wrangling.R")
student_health_data <- merge(mental_health_data, stress_levels_data)
student_health_data <- merge(mental_health_data, stress_levels_data, all=TRUE)
View(student_health_data)
View(student_health_data)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
unique(mental_health_data$Sleep_Quality)
unique(mental_health_data$Physical_Activity)
unique(mental_health_data$Diet_Quality)
unique(mental_health_data$Substance_Use)
unique(mental_health_data$Social_Support)
unique(mental_health_data$Semester_Credit_Load)
unique(stress_levels_data$Sleep_Quality)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
mental_health_data <- mental_health_data %>%
rename(
School_Load = Semester_Credit_Load,
Academic_Performace = CGPA
)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
mental_health_data <- mental_health_data %>%
select(c("Academic_Performance", "Stress_Level", "Depression_Score",
"Anxiety_Score", "Sleep_Quality", "Physical_Activity", "Diet_Quality",
"Social_Support", "Substance_Use", "Financial_Stress", "Extracurricular_Involvement",
"School_Load"))
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
unique(stress_levels_data$Depression_Score)
unique(stress_levels_data$Anxiety_Score)
source("~/Documents/INFO201/project/data_wrangling.R")
unique(stress_levels_data$Depression_Score)
unique(stress_levels_data$Anxiety_Score)
student_health_data <- full_join(mental_health_data, stress_levels_data)
mental_health_data[1295]
mental_health_data[:, 1295]
mental_health_data[:][1295]
mental_health_data[1:7010][1295]
mental_health_data[1:14][1295]
mental_health_data[1][1295]
View(student_health_data)
View(student_health_data)
print(colnames(student_health_data))
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
mental_health_data <- read.csv("/Users/isaacyun/Documents/INFO201/project/actual data/students_mental_health_survey.csv")
source("~/Documents/INFO201/project/data_wrangling.R")
unique(mental_health_data$Financial_Stress)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
unique(student_health_data$Substance_Use)
mental_health_data <- read.csv("/Users/isaacyun/Documents/INFO201/project/actual data/students_mental_health_survey.csv")
unique(men)
unique(mental_health_data$CGPA)
round(4.5)
unique(sleep_health_lifestyle$Quality.of.Sleep)
source("~/Documents/INFO201/project/data_wrangling.R")
unique(sleep_health_lifestyle$Stress_Level)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
unique(sleep_health_lifestyle$Stress_Level)
unique(sleep_health_lifestyle$Sleep_Quality)
source("~/Documents/INFO201/project/data_wrangling.R")
stress_level_df <- sleep_health_lifestyle %>%
group_by(Stress_Level)
stress_level_df <- sleep_health_lifestyle %>%
group_by(Stress_Level) %>%
summarise(
BMI = distinct(BMI),
Heart_Rate = distinct(Heart_Rate),
Sleep_Disorder = distinct(Sleep_Disorder),
Sleep_Duration = distinct(Sleep_Duration)
)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
unique(sleep_health_lifestyle$Heart_Rate)
stress_level_df <- sleep_health_lifestyle %>%
group_by(Stress_Level) %>%
summarise(
Heart_Rate = sort(table(Heart_Rate), decreasing = TRUE)[1]
)
source("~/Documents/INFO201/project/data_wrangling.R")
View(stress_level_df)
View(stress_level_df)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
stress_level_df <- sleep_health_lifestyle %>%
group_by(Stress_Level) %>%
summarise(
BMI = names(sort(table(BMI), decreasing = TRUE))[1],
Blood_Pressure = names(sort(table(Blood_Pressure), decreasing = TRUE))[1],
Heart_Rate = names(sort(table(Heart_Rate), decreasing = TRUE))[1],
Sleep_Disorder = names(sort(table(Sleep_Disorder), decreasing = TRUE))[1:3],
Sleep_Duration = names(sort(table(Sleep_Duration), decreasing = TRUE))[1:3]
)
source("~/Documents/INFO201/project/data_wrangling.R")
View(stress_level_df)
View(stress_level_df)
source("~/Documents/INFO201/project/data_wrangling.R")
View(sleep_qual_df)
View(sleep_qual_df)
sleep_stress_df <- merge(sleep_qual_df, stress_level_df)
View(sleep_stress_df)
View(sleep_stress_df)
sleep_stress_df <- merge(sleep_qual_df, stress_level_df, all=TRUE)
View(sleep_stress_df)
View(sleep_stress_df)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
student_health_data <- merge(student_health_data, stress_level_df, by="Stress_Level", all.x = TRUE)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
unique(student_health_data$Sleep_Quality)
unique(student_health_data$Stress_Level)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
View(student_health_data)
View(student_health_data)
source("~/Documents/INFO201/project/data_wrangling.R")
View(student_health_data)
View(student_health_data)
source("~/Documents/INFO201/project/data_wrangling.R")
View(student_health_data)
View(student_health_data)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
student_health_data$Potential_Blood_Pressure
student_health_data$Potential_Blood_Pressure[1]
View(student_health_data)
View(student_health_data)
source("~/Documents/INFO201/project/data_wrangling.R")
View(student_health_data)
View(student_health_data)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
View(summarized)
View(summarized)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
View(summarized)
View(summarized)
source("~/Documents/INFO201/project/data_wrangling.R")
View(summarized)
View(summarized)
source("~/Documents/INFO201/project/data_wrangling.R")
View(summarized)
View(summarized)
source("~/Documents/INFO201/project/data_wrangling.R")
student_health_data %>%
filter(Stress_Level >= 4)
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
source("~/Documents/INFO201/project/data_wrangling.R")
current_counter <- student_health_data %>%
filter(Sleep_Quality <= 3)
print(nrow(current_counter))
current_counter <- student_health_data %>%
filter(Depression_Score >= 4)
print(nrow(current_counter))
current_counter <- student_health_data %>%
filter(Anxiety_Score >= 4)
print(nrow(current_counter))
current_counter <- student_health_data %>%
filter(School_Load >= 4)
print(nrow(current_counter))
current_counter <- student_health_data %>%
filter(Academic_Performance <= 4)
print(nrow(current_counter))
current_counter <- student_health_data %>%
filter(Academic_Performance < 3)
print(nrow(current_counter))
current_counter <- student_health_data %>%
filter(Academic_Performance <= 3)
print(nrow(current_counter))
current_counter <- student_health_data %>%
filter(Social_Support <= 3)
print(nrow(current_counter))
View(summarized)
View(summarized)
write.csv(student_health_data, "student_health_dataset.csv")
write.csv(student_health_data)
df <- apply(student_health_data,2,as.character)
write.csv(df)
write.csv(df, "student_health_data.csv")
write.csv(df, "/Users/isaacyun/Documents/INFO201/project/actual data/students_health_data.csv")
# Install relevant libraries
install.packages("scales")
np_data <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/1979-2020-National-Park-Visits-By-State.csv", stringsAsFactors = FALSE)
# Install relevant libraries
install.packages("scales")
# NP Data Viz Customization
rm(list = ls())
np_data <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/1979-2020-National-Park-Visits-By-State.csv", stringsAsFactors = FALSE)
# Install relevant libraries
install.packages("scales")
# Load relevant libraries
library("scales")
library("dplyr")
library("ggplot2")
# Exercise 1: You're going to compare the recreation visits over time for at least 2 National Parks
# Explore np_data and pick at least 2 NPs that would be interesting to compare
# Filter the data for those 2 or more NPs
my_parks <-
View(np_data)
View(np_data)
# Exercise 1: You're going to compare the recreation visits over time for at least 2 National Parks
# Explore np_data and pick at least 2 NPs that would be interesting to compare
# Filter the data for those 2 or more NPs
my_parks <- np_data %>%
filter(ParkName %in% c("Badlands NP", "Bryce Canyon NP"))
# Exercise 2: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# See what the plot looks like before you turn off scientific notation, and then turn off scientific notation by uncommenting and running the line below
# options(scipen = 999)
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName))
options(scipen = 999)
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName))
# Exercise 2: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# See what the plot looks like before you turn off scientific notation, and then turn off scientific notation by uncommenting and running the line below
# options(scipen = 999)
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName))
options(scipen = 999)
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName))
# Exercise 3: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# Additionally, choose a new color palette
# Possible color palettes: https://r-graph-gallery.com/38-rcolorbrewers-palettes.html
# Also, add a significant, attention-grabbing title and legible x, y axes labels
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName)) +
scale_color_brewer(palette = "YlOrRd") +
labs(title = "Bryce Canyon Overtakes the Badlands in the 21st Century", x = "Year", y = "Number of Visits")
# Exercise 1: You're going to compare the recreation visits over time for at least 2 National Parks
# Explore np_data and pick at least 2 NPs that would be interesting to compare
# Filter the data for those 2 or more NPs
my_parks <- np_data %>%
filter(ParkName %in% c("Badlands NP", "Bryce Canyon NP", "Acadia NP"))
# Exercise 2: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# See what the plot looks like before you turn off scientific notation, and then turn off scientific notation by uncommenting and running the line below
# options(scipen = 999)
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName))
options(scipen = 999)
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName))
# Exercise 3: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# Additionally, choose a new color palette
# Possible color palettes: https://r-graph-gallery.com/38-rcolorbrewers-palettes.html
# Also, add a significant, attention-grabbing title and legible x, y axes labels
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName)) +
scale_color_brewer(palette = "YlOrRd") +
labs(title = "Bryce Canyon Overtakes the Badlands in the 21st Century", x = "Year", y = "Number of Visits")
source("~/Downloads/NP-Data-Customization.R")
install.packages("scales")
# Exercise 3: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# Additionally, choose a new color palette
# Possible color palettes: https://r-graph-gallery.com/38-rcolorbrewers-palettes.html
# Also, add a significant, attention-grabbing title and legible x, y axes labels
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName)) +
scale_color_brewer(palette = "YlOrRd") +
labs(title = "National Park Visits by Year, Acadia Displays it's Popularity!", x = "Year", y = "Number of Visits")
# Exercise 4: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# Additionally, choose a new color palette
# Also, add a significant, attention-grabbing title and legible x, y axes labels
# Finally, format the x tick labels so that they appear every 5 years, and change the y axis to abbreviated thousands (k) and millions (m)
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName)) +
scale_color_brewer(palette = "YlOrRd") +
labs(title = "National Park Visits by Year, Acadia Displays it's Popularity!", x = "Year", y = "Number of Visits") +
scale_x_continuous(breaks = seq(1980, 2020, 5)) +
scale_y_continuous(labels = label_number(scale_cut = cut_short_scale()))
rm(list=ls())
# Install libraries
install.packages("plotly")
# Load libraries
library("dplyr")
library("ggplot")
# Load data
# https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv
# Original data from The World Bank
# https://genderdata.worldbank.org/indicators/sh-leve/?view=bar
maternity_df <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv", stringsAsFactors = FALSE)
source("~/Documents/INFO201/lec13stuff/maternity-leave-plot.R")
source("~/Documents/INFO201/lec13stuff/maternity-leave-plot.R")
# Install libraries
install.packages("plotly")
install.packages("plotly")
# Load libraries
library("dplyr")
library("ggplot2")
library("plotly")
# Load data
# https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv
# Original data from The World Bank
# https://genderdata.worldbank.org/indicators/sh-leve/?view=bar
maternity_df <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv", stringsAsFactors = FALSE)
# Exercise 1: Filter for the United States, Bulgaria, and Italy
selected_df <- maternity_df %>%
filter(Country.Name %in% c("United States", "Bulgaria", "Italy"))
# Exercise 2: Make a bar plot of countries on the y axis and number of days paid maternity leave on the x axis
maternity_plot <- ggplot(selected_df) +
geom_col(aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
text = paste("Country:", Country.Name)))
# Exercise 2: Make a bar plot of countries on the y axis and number of days paid maternity leave on the x axis
maternity_plot <- ggplot(selected_df) +
geom_col(mapping = aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
text = paste("Country:", Country.Name)))
source("~/Documents/INFO201/lec13stuff/maternity-leave-plot.R")
source("~/Documents/INFO201/lec13stuff/maternity-leave-plot.R")
install.packages("plotly")
# Exercise 3: Make the plot interactive
ggplotly(maternity_plot, tooltip = "text")
# Exercise 3: Make the plot interactive
plotly(maternity_plot, tooltip = "text")
library(plotly)
# Load libraries
library("dplyr")
library("ggplot2")
library(plotly)
# Load data
# https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv
# Original data from The World Bank
# https://genderdata.worldbank.org/indicators/sh-leve/?view=bar
maternity_df <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv", stringsAsFactors = FALSE)
# Exercise 1: Filter for the United States, Bulgaria, and Italy
selected_df <- maternity_df %>%
filter(Country.Name %in% c("United States", "Bulgaria", "Italy"))
# Exercise 2: Make a bar plot of countries on the y axis and number of days paid maternity leave on the x axis
maternity_plot <- ggplot(selected_df) +
geom_col(mapping = aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name))
# Exercise 3: Make the plot interactive
plotly(maternity_plot, tooltip = "text")
# Exercise 3: Make the plot interactive
ggplotly(maternity_plot, tooltip = "text")
# Exercise 2: Make a bar plot of countries on the y axis and number of days paid maternity leave on the x axis
maternity_plot <- ggplot(selected_df) +
geom_col(mapping = aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
ylab = "Country Name"))
# Exercise 3: Make the plot interactive
ggplotly(maternity_plot, tooltip = "text")
# Exercise 2: Make a bar plot of countries on the y axis and number of days paid maternity leave on the x axis
maternity_plot <- ggplot(selected_df) +
geom_col(mapping = aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name)) +
ylab("Country Name")
# Exercise 3: Make the plot interactive
ggplotly(maternity_plot, tooltip = "text")
library(shiny); runApp('Documents/INFO201/lec13stuff/app-solution.R')
rm(ls=list())
rm(list=ls())
install.packages('rsconnect')
rsconnect::setAccountInfo(name='isaacw2as',
token='9738425A4AF4D413EAA3EEEDF078BBEB',
secret='<SECRET>')
rsconnect::setAccountInfo(name='isaacw2as', token='9738425A4AF4D413EAA3EEEDF078BBEB', secret='saDNST63fG1xlFCvJM+81g+pzqwrjH6/PqpsRB/3')
library(rsconnect)
rsconnect::deployApp('/Users/isaacyun/Documents/INFO201/lec14stuff/final project starter/app.R')
shiny::runApp('Documents/INFO201/lec14stuff/final project starter')
rsconnect::deployApp('Users/isaacyun/Documents/INFO201/lec14stuff/final project starter/app.R')
dir
getwd()
rsconnect::deployApp('/Documents/INFO201/lec14stuff/final project starter/app.R')
shiny::runApp('Documents/INFO201/lec15stuff/shiny-name-app')
runApp('Documents/INFO201/lec15stuff/shiny-name-app')
setwd("/Users/isaacyun/Documents/INFO201/project/INFO201_BG6_Final_Project")
shiny::runApp('App')
